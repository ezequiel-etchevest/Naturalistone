{"version":3,"names":["debounce","FOCUSABLE_ELEMENTS","getActiveOverlayEl","createSuperFocus","lastFocusWasOnSuperFocusableEl","superFocus","dashboardEl","activeOverlayType","overlayEl","isFocusInOverlay","contains","document","activeElement","superFocusableEl","querySelector","focus","preventScroll","firstEl"],"sources":["createSuperFocus.js"],"sourcesContent":["import debounce from 'lodash/debounce.js'\nimport FOCUSABLE_ELEMENTS from '@uppy/utils/lib/FOCUSABLE_ELEMENTS'\nimport getActiveOverlayEl from './getActiveOverlayEl.js'\n\n/*\n  Focuses on some element in the currently topmost overlay.\n\n  1. If there are some [data-uppy-super-focusable] elements rendered already - focuses\n     on the first superfocusable element, and leaves focus up to the control of\n     a user (until currently focused element disappears from the screen [which\n     can happen when overlay changes, or, e.g., when we click on a folder in googledrive]).\n  2. If there are no [data-uppy-super-focusable] elements yet (or ever) - focuses\n     on the first focusable element, but switches focus if superfocusable elements appear on next render.\n*/\nexport default function createSuperFocus () {\n  let lastFocusWasOnSuperFocusableEl = false\n\n  const superFocus = (dashboardEl, activeOverlayType) => {\n    const overlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType)\n\n    const isFocusInOverlay = overlayEl.contains(document.activeElement)\n    // If focus is already in the topmost overlay, AND on last update we focused on the superfocusable\n    // element - then leave focus up to the user.\n    // [Practical check] without this line, typing in the search input in googledrive overlay won't work.\n    if (isFocusInOverlay && lastFocusWasOnSuperFocusableEl) return\n\n    const superFocusableEl = overlayEl.querySelector('[data-uppy-super-focusable]')\n    // If we are already in the topmost overlay, AND there are no super focusable elements yet, - leave focus up to the user.\n    // [Practical check] without this line, if you are in an empty folder in google drive, and something's uploading in the\n    // bg, - focus will be jumping to Done all the time.\n    if (isFocusInOverlay && !superFocusableEl) return\n\n    if (superFocusableEl) {\n      superFocusableEl.focus({ preventScroll: true })\n      lastFocusWasOnSuperFocusableEl = true\n    } else {\n      const firstEl = overlayEl.querySelector(FOCUSABLE_ELEMENTS)\n      firstEl?.focus({ preventScroll: true })\n      lastFocusWasOnSuperFocusableEl = false\n    }\n  }\n\n  // ___Why do we need to debounce?\n  //    1. To deal with animations: overlay changes via animations, which results in the DOM updating AFTER plugin.update()\n  //       already executed.\n  //    [Practical check] without debounce, if we open the Url overlay, and click 'Done', Dashboard won't get focused again.\n  //    [Practical check] if we delay 250ms instead of 260ms - IE11 won't get focused in same situation.\n  //    2. Performance: there can be many state update()s in a second, and this function is called every time.\n  return debounce(superFocus, 260)\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,OAAOC,kBAAkB,MAAM,yBAAyB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,gBAAgBA,CAAA,EAAI;EAC1C,IAAIC,8BAA8B,GAAG,KAAK;EAE1C,MAAMC,UAAU,GAAGA,CAACC,WAAW,EAAEC,iBAAiB,KAAK;IACrD,MAAMC,SAAS,GAAGN,kBAAkB,CAACI,WAAW,EAAEC,iBAAiB,CAAC;IAEpE,MAAME,gBAAgB,GAAGD,SAAS,CAACE,QAAQ,CAACC,QAAQ,CAACC,aAAa,CAAC;IACnE;IACA;IACA;IACA,IAAIH,gBAAgB,IAAIL,8BAA8B,EAAE;IAExD,MAAMS,gBAAgB,GAAGL,SAAS,CAACM,aAAa,CAAC,6BAA6B,CAAC;IAC/E;IACA;IACA;IACA,IAAIL,gBAAgB,IAAI,CAACI,gBAAgB,EAAE;IAE3C,IAAIA,gBAAgB,EAAE;MACpBA,gBAAgB,CAACE,KAAK,CAAC;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;MAC/CZ,8BAA8B,GAAG,IAAI;IACvC,CAAC,MAAM;MACL,MAAMa,OAAO,GAAGT,SAAS,CAACM,aAAa,CAACb,kBAAkB,CAAC;MAC3DgB,OAAO,oBAAPA,OAAO,CAAEF,KAAK,CAAC;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;MACvCZ,8BAA8B,GAAG,KAAK;IACxC;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,OAAOJ,QAAQ,CAACK,UAAU,EAAE,GAAG,CAAC;AAClC"}